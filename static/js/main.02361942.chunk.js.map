{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","handleChange","e","key","currentTarget","setState","value","handleSubmit","preventDefault","props","onSubmit","style","contactForm","this","input","type","onChange","pattern","title","required","button","Component","ContactList","contacts","onDeleteContact","contactsList","map","id","contactItem","listItem","listItemText","onClick","Filter","App","filter","addContact","contact","v4","find","toLowerCase","alert","delContact","contactId","prevState","changeFilter","filterContats","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02361942.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__nInYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1BrV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__jZxXO\",\"contactItem\":\"ContactList_contactItem__1W5dH\",\"listItem\":\"ContactList_listItem__3CH3F\",\"listItemText\":\"ContactList_listItemText__3NBHj\",\"button\":\"ContactList_button__1OHax\"};","import PropTypes from \"prop-types\";\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Container;","import { Component } from \"react\";\r\nimport style from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        const key = e.currentTarget.name;\r\n        this.setState({ [key]: e.currentTarget.value });\r\n    };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.setState({\r\n        name: '',\r\n        number: ''\r\n    });\r\n  };\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n                <label > Name\r\n                    <input className={style.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <label > Number\r\n                    <input className={style.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять из не менее 5 цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n\r\n                <button type=\"submit\" className={style.button}>\r\n                    Сохранить\r\n                </button>\r\n\r\n            </form>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ContactForm;","import style from './ContactList.module.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul  className={style.contactsList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={style.contactItem}>\r\n                    <span className={style.listItem}>\r\n                        <p className={style.listItemText}>{name}</p>\r\n                        <p className={style.listItemText}>{number}</p>\r\n                    </span>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                        className={style.button}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import PropTypes from \"prop-types\";\r\nimport style from './Filter.module.css'\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n        <input type=\"text\" value={value} onChange={onChange} className={ style.input}/>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default Filter;","import { Component } from 'react';\nimport { v4 } from 'uuid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${contact.name} is already in contacts`);\n    } else if (contacts.find(({ number }) => number === contact.number)) {\n      alert(`${contact.number} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  delContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContats = () =>\n    this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n\n  render() {\n    const { addContact, delContact, changeFilter, filterContats } = this;\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={changeFilter} />\n        <ContactList contacts={filterContats()} onDeleteContact={delContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__2CG3U\",\"button\":\"ContactForm_button__f9NgA\"};"],"sourceRoot":""}